buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    group 'edu.noia.myoffice'
    version = '0.0.1'
    repositories {
        jcenter()
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven {
            name 'mavenRemote'
            url myMavenRepoReadUrl
            credentials {
                username myMavenRepoReadUsername
                password myMavenRepoReadPassword
            }
        }
    }
}

gradle.taskGraph.whenReady { graph ->
    def badTasks = ['startScripts', 'distTar', 'distZip']
    graph.allTasks.findAll {it.name in badTasks}.each { task ->
        task.enabled = false
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'maven-publish'
    sourceCompatibility = 1.8
    ext {
        springBootAdminVersion='2.0.0-SNAPSHOT'
    }
    dependencyManagement {
        imports {
            mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        }
    }
    publishing {
        repositories {
            mavenLocal()
            maven {
                name 'mavenRemote'
                url myMavenRepoWriteUrl
                credentials {
                    username myMavenRepoWriteUsername
                    password myMavenRepoWritePassword
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
    task install(dependsOn: publishToMavenLocal)
    task deploy(dependsOn: publish)

    bootJar.enabled = false
    jar.enabled = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}